<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Wisebirds Tech</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://tech-wisebirds.github.io/"/>
  <updated>2020-04-20T08:56:57.245Z</updated>
  <id>https://tech-wisebirds.github.io/</id>
  
  <author>
    <name>WIsebirds Corp.</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>와이즈버즈 프로젝트 방법론</title>
    <link href="https://tech-wisebirds.github.io/2020/04/20/projectManage/"/>
    <id>https://tech-wisebirds.github.io/2020/04/20/projectManage/</id>
    <published>2020-04-19T16:34:03.000Z</published>
    <updated>2020-04-20T08:56:57.245Z</updated>
    
    <content type="html"><![CDATA[<p>와이즈버즈에 입사한지도 5년째.<br>기술연구소가 현재의 자리를 잡기까지 코드품질 개선이나 개발조직의 프로세스 개선을 위해 여러가지 시도와 실패 (MSA feat.CTO)를 경험하면서 발전하고있다.<br>처음에는 개발방법론 따위는 없었다. 아마도.. 유사 워터폴 이었던것 같다.<br>기획완료 - 개발 - 기획수정 - 개발 - 기획수정 - 개발 - 일정지연…</p><hr><h2 id="워터폴-모델-Waterfall-Model"><a href="#워터폴-모델-Waterfall-Model" class="headerlink" title="워터폴 모델 (Waterfall Model)"></a>워터폴 모델 (Waterfall Model)</h2><hr><blockquote><p>요구분석 - 설계 - 디자인 - 코딩 - 테스트 - 릴리즈 순으로 순차적으로 이어지는 흐름이 폭포수처럼 아래로 이어져 보인다 하여 붙여진 이름이다.<br>요구사항을 완벽하게 취합하고 계획을 잘 세운 후, 그 계획에 맞춰 진행하는 방법론이다.<br>각 단계의 경계를 명확히 구분하고, 앞 파트의 업무가 완전히 끝난 후 다음 단계를 시작하는 것이 문제이다.</p></blockquote><p><img src="/images/waterfall_model.png" alt="waterfall_model"></p><p>그러던 중 누군가에 의해 우리는 애자일을 도입하게 되었다.</p><hr><h2 id="애자일-모델-Agile-Model"><a href="#애자일-모델-Agile-Model" class="headerlink" title="애자일 모델 (Agile Model)"></a>애자일 모델 (Agile Model)</h2><hr><blockquote><p>앞을 예측하며 개발하지 않고, 일정한 주기를 가지고 끊임없이 프로토 타입을 만들어내며 필요시에 요구 사항을 더하고 수정하여 커다란 소프트웨어를 개발해 나가는 방식이다.<br>애자일은 어느 특정한 개발 방법론을 지칭하지는 않고, ‘Agile = 기민한, 날렵한’이란 뜻으로 좋은 것을 빠르고, 낭비 없게 만드는 다양한 방법론의 통칭이다.</p></blockquote><p>워터폴은 어떻고 저떻고, 애자일은 어떻고 저떻고~~<br>음… 이상과 현실사이…<br>분명히 우리는 애자일을 도입해서 사용하고 있는데, 사람과 환경 모두 이전과 크게 달라지지 않았다.<br>애자일을 사용중입니다! 라고 말한다고 해서 바로 개선이 되고 적응되는는게 아니었다.<br>프로세스 개선이 정착 되려면 프로젝트의 상황(했으면 좋은일과 할 수 있는 일, 품질위주로 갈지 기간내에 끝낼지 등)에 따른 프로세스를 적용해야 한다.<br>하지만 현실적으로 우리회사의 기존 프로세스를 고려하면 애자일은 불가능 한 것이였으리…</p><p>애자일 도입 후 1도 달라지지 않은 프로세스를 경험하던 중, 아틀라시안의 JIRA를 만나면서 우리는 자연스럽게 스크럼으로 갈아타게 되었다.</p><hr><h2 id="스크럼-Scrum"><a href="#스크럼-Scrum" class="headerlink" title="스크럼 (Scrum)"></a>스크럼 (Scrum)</h2><hr><p>프로젝트 관리를 위한 상호,점진적 개발방법론이며 애자일 개발과정중의 하나이다.</p><p><img src="/images/scrum_meet.PNG" alt="scrum_meet"><br>날마다 15분 정도의 회의를 가지고, 보고가 아닌 수평적으로 공유차원에서 진행해야 한다.<br>개발팀원만 참여해야하고, 관리자가 함께 참석하게되면 이들도 업무에 관련된 내용을 공유해야한다. 그렇지 않으면 한팀이 아닌 관리자 모드로 돌아서게된다. </p><p><img src="/images/scrum_step.PNG" alt="scrum_step"><br>보통 30일 단위로 주기를 나누고, 진행상황에 따라 1~4주 단위의 작은주기(Sprint)로 쪼개서 개발하며, 개발주기마다 실제 동작할 수 있는 결과를 제공한다.</p><p><img src="/images/scrum.png" alt="scrum"><br>기간동안 해야할 목표와 필요 작업을 명시하고, 진행사항을 백로그로 남긴다.</p><p><img src="/images/scrum_review.png" alt="scrum_review"><br>스프린트 마지막날 회고를 통해 팀의 개발 프로세스에 대한 개선의 시간을 갖는다.</p><p>당시 CTO 덕분에 스크럼에 완벽하게 적응할 수 있게 되었다.<br>매일 업무시작과 동시에 자리에서 10분내로 팀별 데일리 스탠드업 미팅이 진행 되었다.<br>삼삼오오 자리에 서서 미팅을 진행한다는게 처음에는 어색하고 불편하기도 했지만, 점차 익숙해졌다.<br>당시에 비해 사람이 적어진 현재는 연구소 전체가 회의실에 모여서 30분내로 데일리 미팅을 진행하며, 어제한일/오늘할일/이슈 등 서로의 일정을 보고하고 있다.</p><p>스크럼은 보통 30일 주기로 나눈다고 하는데, 실제 프로젝트를 진행하면서 30일 단위의 프로세스는 적용할 수 없었다.<br>프로젝트의 특성상 30일 단위의 개발주기는 힘들고, 현재 우리는 1일1티켓 처리가능하도록 프로세스를 적용하고 있다.<br>그만큼 하루에 처리가능할 정도로 업무단위를 쪼개서 1주일 단위로 배포가 이루어지고 있다.</p><p><img src="/images/jira.png" alt="jira"><br>우리는 스프린트 목표와 스프린트 백로그를 남기기위해 아틀라시안 지라의 칸반보드를 사용한다.</p><p>연구소 단위의 회고는 없고, 팀단위의 회고로 진행한다.<br>우리팀의 경우 큰 프로젝트의 1차적으로 완료 되었을 때 회고의 시간을 갖는다.<br>프로젝트가 짧게는 3~4개월 길게는 거의 1년 가까이도 걸리기 때문에 회고를 갖는 시간은 1년에 한두번 밖에 없다.</p><hr><p>현재 우리는 스크럼 규칙에 딱맞지는 않지만, 그렇다고 스크럼이 아니라고 할 수 도 없는 약간은 애매한, 스크럼을 사용중이다.<br>프로젝트 전체를 봤을때는 워터폴 + 스크럼 방식을 도입해 사용중이다.  요구사항을 파악하고, 설계를 하고, 디자인을 하고, 개발이 시작되기까지는 오랜 시간이 걸린다.<br>아직 큰 틀은 워터폴을 벗어나지는 못했다. </p><p>1년,2년 그리고 5년전과 비교했을때 연구소는 점차 발전하고 있고, 업무 프로세스도 많은 부분 나아지고 안정화 되고 있는것은 사실이다.<br>처음에는 어색하고 불펴했던 절차들도 이제는 몸에 익으니 익숙하고 오히려 편해지기까지 했다.<br>개발자들의 입맛에 맞게 개발 조직의 프로세스도 많이 변화되고 있다. 앞으로도 변화될 것이다.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;와이즈버즈에 입사한지도 5년째.&lt;br&gt;기술연구소가 현재의 자리를 잡기까지 코드품질 개선이나 개발조직의 프로세스 개선을 위해 여러가지 시도와 실패 (MSA feat.CTO)를 경험하면서 발전하고있다.&lt;br&gt;처음에는 개발방법론 따위는 없었다. 아마도
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Theme 적용</title>
    <link href="https://tech-wisebirds.github.io/2020/03/25/changeTheme/"/>
    <id>https://tech-wisebirds.github.io/2020/03/25/changeTheme/</id>
    <published>2020-03-25T08:14:00.000Z</published>
    <updated>2020-03-25T08:28:08.543Z</updated>
    
    <content type="html"><![CDATA[<p>Hexo는 여러가지 테마를 제공하고 쉽게 바꿀 수 있다.<br><a href="https://hexo.io/themes/" target="_blank" rel="noopener">https://hexo.io/themes/</a> 에서 원하는 테마를 골라서 적용해보자<br>적용하고 원하는 부분은 custom하면 된다.</p><h4 id="Theme-git-clone"><a href="#Theme-git-clone" class="headerlink" title="Theme git clone"></a>Theme git clone</h4><p>Hexo 설치했던 경로에 보면 themes 폴더가 생성되어 있고, 안에는 기본 테마인 landscape가 있을 것이다.<br>themes 폴더에 테마를 추가하면 쉽게 변경이 가능하다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> <span class="variable">$&#123;user destination&#125;</span></span><br><span class="line">$ git <span class="built_in">clone</span> <span class="variable">$&#123;Theme git link&#125;</span> themes/<span class="variable">$&#123;folder name&#125;</span></span><br></pre></td></tr></table></figure><h4 id="config-yml-Theme-변경"><a href="#config-yml-Theme-변경" class="headerlink" title="_config.yml Theme 변경"></a>_config.yml Theme 변경</h4><p>원하는 테마를 clone했다면 설정만 변경해주면 된다!</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#Themes</span><br><span class="line">    theme: $&#123;folder name&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Hexo는 여러가지 테마를 제공하고 쉽게 바꿀 수 있다.&lt;br&gt;&lt;a href=&quot;https://hexo.io/themes/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://hexo.io/themes/&lt;/a&gt; 에서 원하는 테마
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>포스팅하기</title>
    <link href="https://tech-wisebirds.github.io/2020/03/24/new-posting/"/>
    <id>https://tech-wisebirds.github.io/2020/03/24/new-posting/</id>
    <published>2020-03-24T09:41:00.000Z</published>
    <updated>2020-03-25T06:33:44.389Z</updated>
    
    <content type="html"><![CDATA[<p>일반적으로 블로그에서 포스팅하는 것처럼 에디터로 포스팅을 만들지는 않고,<br>파일을 생성, <code>Markdown</code> 문서로 포스트를 작성하는 형식이다.<br>*<code>Markdown</code> 문서는 공식 페이지를 참고.(<a href="https://guides.github.com/features/mastering-markdown/" target="_blank" rel="noopener">https://guides.github.com/features/mastering-markdown/</a>)</p><h4 id="파일-생성"><a href="#파일-생성" class="headerlink" title="파일 생성"></a>파일 생성</h4><p>파일 생성은 두 가지 방법이 있다. 하나는 직접 디렉토리에 파일 생성, 다른 하나는 command를 이용하여 생성하는 방법이 있다.<br>아래는 후자를 이용해 생성하는 방법이다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$hexo</span> new post <span class="variable">$&#123;file name&#125;</span></span><br></pre></td></tr></table></figure><h4 id="자주-사용-예제"><a href="#자주-사용-예제" class="headerlink" title="자주 사용 예제"></a>자주 사용 예제</h4><p>앞으로 작성할 포스팅에 새로운 문법이 쓰이면 예제를 함께 기재할 예정이다.</p><ol><li>header<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># &lt;h1&gt;</span><br><span class="line">## &lt;h2&gt;</span><br><span class="line">### &lt;h3&gt;</span><br><span class="line">...</span><br></pre></td></tr></table></figure></li><li>order<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1. 가</span><br><span class="line">    1. 가-1</span><br><span class="line">    1. 가-2</span><br><span class="line">1. 나</span><br><span class="line">1. 다</span><br></pre></td></tr></table></figure></li><li>image<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![](&#x2F;images&#x2F;logo.png)</span><br></pre></td></tr></table></figure></li><li>link<br>링크만 기재해도 됨<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[Text](&#x2F;&#x2F;tech-wisebirds.github.io)</span><br><span class="line">&#x2F;&#x2F;tech-wisebirds.github.io</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;일반적으로 블로그에서 포스팅하는 것처럼 에디터로 포스팅을 만들지는 않고,&lt;br&gt;파일을 생성, &lt;code&gt;Markdown&lt;/code&gt; 문서로 포스트를 작성하는 형식이다.&lt;br&gt;*&lt;code&gt;Markdown&lt;/code&gt; 문서는 공식 페이지를 참고.(&lt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Git + Hexo</title>
    <link href="https://tech-wisebirds.github.io/2020/03/24/install-hexo/"/>
    <id>https://tech-wisebirds.github.io/2020/03/24/install-hexo/</id>
    <published>2020-03-24T06:12:28.000Z</published>
    <updated>2020-03-25T06:33:30.529Z</updated>
    
    <content type="html"><![CDATA[<p>30분~1시간 정도면 생성할 수 있는 블로그 만들기!<br>여러가지 비교해서 테마와 여러가지 플러그인 사용법이 간단하다.<br>테마나 플러그인에 따라 약간의 수정이 필요한 경우도 있다.</p><h4 id="사전-준비"><a href="#사전-준비" class="headerlink" title="사전 준비"></a>사전 준비</h4><ol><li>Git Repository 생성(public)</li><li>Node.js 설치</li></ol><h4 id="Hexo-설치-및-설정"><a href="#Hexo-설치-및-설정" class="headerlink" title="Hexo 설치 및 설정"></a>Hexo 설치 및 설정</h4><ol><li><p>Hexo 설치</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> <span class="variable">$&#123;user destination&#125;</span></span><br><span class="line">$ npm install hexo-cli -g</span><br><span class="line">$ hexo init <span class="variable">$&#123;user destination&#125;</span></span><br><span class="line">$ npm install</span><br><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li><li><p>config 설정<br>Hexo 설치 시 설정했던 ${user destination} 경로로 들어가보면 _config.yml이 생성되어 있는데<br>날짜, 시간, 언어 사이트 타이들 등 여러가지 수정이 가능하고, 몇가지 설정을 해두면 편하게 사용할 수 있다.<br>이 블로그는 아래 항목만 수정해서 사용했다.<br>위 작업에서 <code>hexo-deployer-git --save</code>를 하지 않았다면 이 단계에서 plugin으로 설정이 가능하다</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#Site </span><br><span class="line">    title: Wisebirds Tech</span><br><span class="line">    author: Wisebirds Corp.</span><br><span class="line"></span><br><span class="line">#URL</span><br><span class="line">    url: https:&#x2F;&#x2F;tech-wisebirds.github.io&#x2F;</span><br><span class="line"></span><br><span class="line">##theme</span><br><span class="line">    theme: anatole</span><br><span class="line"></span><br><span class="line">#Depolyment</span><br><span class="line">    deploy:</span><br><span class="line">        type: git</span><br><span class="line">        repo: $&#123;user git url&#125;</span><br><span class="line">        branch: $&#123;branch&#125;</span><br><span class="line">#Plugin</span><br><span class="line">    plugins:</span><br><span class="line">    - hexo-deployer-git</span><br></pre></td></tr></table></figure></li></ol><h4 id="Local-Test"><a href="#Local-Test" class="headerlink" title="Local Test"></a>Local Test</h4><p>배포하기 전 로컬 확인이 필요할때 hexo 실행, localhost:4000 으로 확인 할 수 있다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$hexo</span> server</span><br></pre></td></tr></table></figure><h4 id="Git-배포"><a href="#Git-배포" class="headerlink" title="Git 배포!"></a>Git 배포!</h4><p>확인이 끝났다면 만들어뒀던 repository로 배포만 하면 된다.<br>Hexo는 배포도 쉽게 가능하다<br>아래 예시의 clean 은 항상 해야하는 것은 아니지만 배포가 완료되어도 간혹 페이지가 바뀌지 않는 현상이 있어 가급적이면<br>같이 실행하는 것이 좋다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$hexo</span> clean</span><br><span class="line"><span class="variable">$hexo</span> deploy --generate</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;30분~1시간 정도면 생성할 수 있는 블로그 만들기!&lt;br&gt;여러가지 비교해서 테마와 여러가지 플러그인 사용법이 간단하다.&lt;br&gt;테마나 플러그인에 따라 약간의 수정이 필요한 경우도 있다.&lt;/p&gt;
&lt;h4 id=&quot;사전-준비&quot;&gt;&lt;a href=&quot;#사전-준
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Static Site Generator 비교</title>
    <link href="https://tech-wisebirds.github.io/2020/03/23/compare/"/>
    <id>https://tech-wisebirds.github.io/2020/03/23/compare/</id>
    <published>2020-03-23T06:12:28.000Z</published>
    <updated>2020-03-25T08:05:39.918Z</updated>
    
    <content type="html"><![CDATA[<p>가장 많이 사용하는 4가지를 선정해 비교</p><style type="text/css">    table {        border-collapse: collapse;        font-size: 0.8rem;        border: 1px solid #444444;    }   th {        border: 1px solid #7F7F7F;        border-bottom: 2px solid #7F7F7F;        padding: 10px;      }    td {        border: 1px solid #7F7F7F;        padding: 10px;        width: 23%;    }    td:first-of-type {            width: 8%        }</style><table><thead><tr><th align="center"></th><th align="center">Jekyll</th><th align="center">Hexo</th><th align="center">Hugo</th><th align="center">Ghost</th></tr></thead><tbody><tr><td align="center">장점</td><td align="center">다양한 테마, 플러그인 API 제공(확장성)</td><td align="center">빠르게 생성, 다양한 테마 제공</td><td align="center">단일 설치 패키지 제공</td><td align="center">시맨틱, 핸들바, 아주 쉽게 사용 가능</td></tr><tr><td align="center">단점</td><td align="center">ruby 설치, 테마 변경 번거로움</td><td align="center">node.js 설치</td><td align="center">플러그인 제공 없음</td><td align="center">비용 발생</td></tr></tbody></table><p>　  </p><h4 id="Table"><a href="#Table" class="headerlink" title="Table"></a>Table</h4><p>내용이 많아 테이블을 그리기 힘들다면 generator를 사용하는 방법도 있다.<br><a href="https://www.tablesgenerator.com/markdown_tables" target="_blank" rel="noopener">https://www.tablesgenerator.com/markdown_tables</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| Header 1 | Header 2 | Header 3 |</span><br><span class="line">|----------|    --:    |   :--:   |</span><br><span class="line">| 왼쪽 정렬 | 오른쪽 정렬 | 가운데 정렬 |</span><br><span class="line">|    가    |     나    |     다     |</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;가장 많이 사용하는 4가지를 선정해 비교&lt;/p&gt;

&lt;style type=&quot;text/css&quot;&gt;
    table {
        border-collapse: collapse;
        font-size: 0.8rem;
        bor
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
